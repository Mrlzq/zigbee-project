///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            29/Apr/2018  10:29:41 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\Source\oled.c                        /
//    Command line       =  -f D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sa /
//                          mples\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\ /
//                          f8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func       /
//                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6        /
//                          -DMAC_CFG_RX_MAX=3) -f D:\zigbee\毕设\lzq\Termina /
//                          l\Projects\zstack\Samples\SampleApp\CC2530DB\..\. /
//                          .\..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO    /
//                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\zigbee\毕设\lzq\Termina /
//                          l\Projects\zstack\Samples\SampleApp\Source\oled.c /
//                           -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D       /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          xLCD_SUPPORTED=DEBUG -lC                          /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\EndDeviceEB\List\ -lA       /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\EndDeviceEB\List\           /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\EndDeviceEB\Obj\ -e         /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\ -I                         /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\Source\ -I               /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\ZMain\TI2530DB\    /
//                          -I D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sa /
//                          mples\SampleApp\CC2530DB\..\..\..\..\..\Component /
//                          s\hal\include\ -I D:\zigbee\毕设\lzq\Terminal\Pro /
//                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ /
//                          ..\..\Components\hal\target\CC2530EB\ -I          /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\Components\m /
//                          ac\include\ -I D:\zigbee\毕设\lzq\Terminal\Projec /
//                          ts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ /
//                          ..\Components\mac\high_level\ -I                  /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\Components\m /
//                          ac\low_level\srf04\ -I D:\zigbee\毕设\lzq\Termina /
//                          l\Projects\zstack\Samples\SampleApp\CC2530DB\..\. /
//                          .\..\..\..\Components\mac\low_level\srf04\single_ /
//                          chip\ -I D:\zigbee\毕设\lzq\Terminal\Projects\zst /
//                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\mt\ -I D:\zigbee\毕设\lzq\Terminal\Projec /
//                          ts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ /
//                          ..\Components\osal\include\ -I                    /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\Components\s /
//                          ervices\saddr\ -I D:\zigbee\毕设\lzq\Terminal\Pro /
//                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ /
//                          ..\..\Components\services\sdata\ -I               /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\Components\s /
//                          tack\af\ -I D:\zigbee\毕设\lzq\Terminal\Projects\ /
//                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ /
//                          Components\stack\nwk\ -I                          /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\Components\s /
//                          tack\sapi\ -I D:\zigbee\毕设\lzq\Terminal\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\stack\sec\ -I                        /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\Components\s /
//                          tack\sys\ -I D:\zigbee\毕设\lzq\Terminal\Projects /
//                          \zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. /
//                          \Components\stack\zdo\ -I                         /
//                          D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\Components\z /
//                          mac\ -I D:\zigbee\毕设\lzq\Terminal\Projects\zsta /
//                          ck\Samples\SampleApp\CC2530DB\..\..\..\..\..\Comp /
//                          onents\zmac\f8w\ -Ohz                             /
//    List file          =  D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\EndDeviceEB\List\oled.s51   /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME oled

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?S_SHL
        EXTERN ?V0
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_I

        PUBLIC ??Draw_BMP?relay
        FUNCTION ??Draw_BMP?relay,0203H
        PUBLIC ??LCD_CLS?relay
        FUNCTION ??LCD_CLS?relay,0203H
        PUBLIC ??LCD_Fill?relay
        FUNCTION ??LCD_Fill?relay,0203H
        PUBLIC ??LCD_Init?relay
        FUNCTION ??LCD_Init?relay,0203H
        PUBLIC ??LCD_P16x16Ch?relay
        FUNCTION ??LCD_P16x16Ch?relay,0203H
        PUBLIC ??LCD_P6x8Str?relay
        FUNCTION ??LCD_P6x8Str?relay,0203H
        PUBLIC ??LCD_P8x16Str?relay
        FUNCTION ??LCD_P8x16Str?relay,0203H
        PUBLIC ??LCD_Set_Pos?relay
        FUNCTION ??LCD_Set_Pos?relay,0203H
        FUNCTION ??LCD_WrCmd?relay,0203H
        FUNCTION ??LCD_WrDat?relay,0203H
        PUBLIC BMP
        PUBLIC Draw_BMP
        FUNCTION Draw_BMP,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC F16x16
        PUBLIC F6x8
        PUBLIC F8X16
        PUBLIC LCD_CLS
        FUNCTION LCD_CLS,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC LCD_Fill
        FUNCTION LCD_Fill,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC LCD_Init
        FUNCTION LCD_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC LCD_P16x16Ch
        FUNCTION LCD_P16x16Ch,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC LCD_P6x8Str
        FUNCTION LCD_P6x8Str,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        PUBLIC LCD_P8x16Str
        FUNCTION LCD_P8x16Str,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC LCD_Set_Pos
        FUNCTION LCD_Set_Pos,021203H
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        FUNCTION LCD_WrCmd,0203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCTION LCD_WrDat,0203H
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK P0DIR
        PUBWEAK P0SEL
        PUBWEAK P1DIR
        PUBWEAK P1SEL
        PUBWEAK _A_P0
        PUBWEAK _A_P1
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
Draw_BMP            SYMBOL "Draw_BMP"
??Draw_BMP?relay    SYMBOL "?relay", Draw_BMP
LCD_CLS             SYMBOL "LCD_CLS"
??LCD_CLS?relay     SYMBOL "?relay", LCD_CLS
LCD_Fill            SYMBOL "LCD_Fill"
??LCD_Fill?relay    SYMBOL "?relay", LCD_Fill
LCD_Init            SYMBOL "LCD_Init"
??LCD_Init?relay    SYMBOL "?relay", LCD_Init
LCD_P16x16Ch        SYMBOL "LCD_P16x16Ch"
??LCD_P16x16Ch?relay SYMBOL "?relay", LCD_P16x16Ch
LCD_P6x8Str         SYMBOL "LCD_P6x8Str"
??LCD_P6x8Str?relay SYMBOL "?relay", LCD_P6x8Str
LCD_P8x16Str        SYMBOL "LCD_P8x16Str"
??LCD_P8x16Str?relay SYMBOL "?relay", LCD_P8x16Str
LCD_Set_Pos         SYMBOL "LCD_Set_Pos"
??LCD_Set_Pos?relay SYMBOL "?relay", LCD_Set_Pos

// D:\zigbee\毕设\lzq\Terminal\Projects\zstack\Samples\SampleApp\Source\oled.c
//    1 #include "codetab.h"

        RSEG XDATA_I:XDATA:NOROOT(0)
// unsigned char F16x16[1024]
F16x16:
        DATA8
        DS 1024
        REQUIRE `?<Initializer for F16x16>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
// unsigned char const __xdata_rom F6x8[92][6]
F6x8:
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 47
        DB 0
        DB 0
        DB 0
        DB 0
        DB 7
        DB 0
        DB 7
        DB 0
        DB 0
        DB 20
        DB 127
        DB 20
        DB 127
        DB 20
        DB 0
        DB 36
        DB 42
        DB 127
        DB 42
        DB 18
        DB 0
        DB 98
        DB 100
        DB 8
        DB 19
        DB 35
        DB 0
        DB 54
        DB 73
        DB 85
        DB 34
        DB 80
        DB 0
        DB 0
        DB 5
        DB 3
        DB 0
        DB 0
        DB 0
        DB 0
        DB 28
        DB 34
        DB 65
        DB 0
        DB 0
        DB 0
        DB 65
        DB 34
        DB 28
        DB 0
        DB 0
        DB 20
        DB 8
        DB 62
        DB 8
        DB 20
        DB 0
        DB 8
        DB 8
        DB 62
        DB 8
        DB 8
        DB 0
        DB 0
        DB 0
        DB 160
        DB 96
        DB 0
        DB 0
        DB 8
        DB 8
        DB 8
        DB 8
        DB 8
        DB 0
        DB 0
        DB 96
        DB 96
        DB 0
        DB 0
        DB 0
        DB 32
        DB 16
        DB 8
        DB 4
        DB 2
        DB 0
        DB 62
        DB 81
        DB 73
        DB 69
        DB 62
        DB 0
        DB 0
        DB 66
        DB 127
        DB 64
        DB 0
        DB 0
        DB 66
        DB 97
        DB 81
        DB 73
        DB 70
        DB 0
        DB 33
        DB 65
        DB 69
        DB 75
        DB 49
        DB 0
        DB 24
        DB 20
        DB 18
        DB 127
        DB 16
        DB 0
        DB 39
        DB 69
        DB 69
        DB 69
        DB 57
        DB 0
        DB 60
        DB 74
        DB 73
        DB 73
        DB 48
        DB 0
        DB 1
        DB 113
        DB 9
        DB 5
        DB 3
        DB 0
        DB 54
        DB 73
        DB 73
        DB 73
        DB 54
        DB 0
        DB 6
        DB 73
        DB 73
        DB 41
        DB 30
        DB 0
        DB 0
        DB 54
        DB 54
        DB 0
        DB 0
        DB 0
        DB 0
        DB 86
        DB 54
        DB 0
        DB 0
        DB 0
        DB 8
        DB 20
        DB 34
        DB 65
        DB 0
        DB 0
        DB 20
        DB 20
        DB 20
        DB 20
        DB 20
        DB 0
        DB 0
        DB 65
        DB 34
        DB 20
        DB 8
        DB 0
        DB 2
        DB 1
        DB 81
        DB 9
        DB 6
        DB 0
        DB 50
        DB 73
        DB 89
        DB 81
        DB 62
        DB 0
        DB 124
        DB 18
        DB 17
        DB 18
        DB 124
        DB 0
        DB 127
        DB 73
        DB 73
        DB 73
        DB 54
        DB 0
        DB 62
        DB 65
        DB 65
        DB 65
        DB 34
        DB 0
        DB 127
        DB 65
        DB 65
        DB 34
        DB 28
        DB 0
        DB 127
        DB 73
        DB 73
        DB 73
        DB 65
        DB 0
        DB 127
        DB 9
        DB 9
        DB 9
        DB 1
        DB 0
        DB 62
        DB 65
        DB 73
        DB 73
        DB 122
        DB 0
        DB 127
        DB 8
        DB 8
        DB 8
        DB 127
        DB 0
        DB 0
        DB 65
        DB 127
        DB 65
        DB 0
        DB 0
        DB 32
        DB 64
        DB 65
        DB 63
        DB 1
        DB 0
        DB 127
        DB 8
        DB 20
        DB 34
        DB 65
        DB 0
        DB 127
        DB 64
        DB 64
        DB 64
        DB 64
        DB 0
        DB 127
        DB 2
        DB 12
        DB 2
        DB 127
        DB 0
        DB 127
        DB 4
        DB 8
        DB 16
        DB 127
        DB 0
        DB 62
        DB 65
        DB 65
        DB 65
        DB 62
        DB 0
        DB 127
        DB 9
        DB 9
        DB 9
        DB 6
        DB 0
        DB 62
        DB 65
        DB 81
        DB 33
        DB 94
        DB 0
        DB 127
        DB 9
        DB 25
        DB 41
        DB 70
        DB 0
        DB 70
        DB 73
        DB 73
        DB 73
        DB 49
        DB 0
        DB 1
        DB 1
        DB 127
        DB 1
        DB 1
        DB 0
        DB 63
        DB 64
        DB 64
        DB 64
        DB 63
        DB 0
        DB 31
        DB 32
        DB 64
        DB 32
        DB 31
        DB 0
        DB 63
        DB 64
        DB 56
        DB 64
        DB 63
        DB 0
        DB 99
        DB 20
        DB 8
        DB 20
        DB 99
        DB 0
        DB 7
        DB 8
        DB 112
        DB 8
        DB 7
        DB 0
        DB 97
        DB 81
        DB 73
        DB 69
        DB 67
        DB 0
        DB 0
        DB 127
        DB 65
        DB 65
        DB 0
        DB 0
        DB 85
        DB 42
        DB 85
        DB 42
        DB 85
        DB 0
        DB 0
        DB 65
        DB 65
        DB 127
        DB 0
        DB 0
        DB 4
        DB 2
        DB 1
        DB 2
        DB 4
        DB 0
        DB 64
        DB 64
        DB 64
        DB 64
        DB 64
        DB 0
        DB 0
        DB 1
        DB 2
        DB 4
        DB 0
        DB 0
        DB 32
        DB 84
        DB 84
        DB 84
        DB 120
        DB 0
        DB 127
        DB 72
        DB 68
        DB 68
        DB 56
        DB 0
        DB 56
        DB 68
        DB 68
        DB 68
        DB 32
        DB 0
        DB 56
        DB 68
        DB 68
        DB 72
        DB 127
        DB 0
        DB 56
        DB 84
        DB 84
        DB 84
        DB 24
        DB 0
        DB 8
        DB 126
        DB 9
        DB 1
        DB 2
        DB 0
        DB 24
        DB 164
        DB 164
        DB 164
        DB 124
        DB 0
        DB 127
        DB 8
        DB 4
        DB 4
        DB 120
        DB 0
        DB 0
        DB 68
        DB 125
        DB 64
        DB 0
        DB 0
        DB 64
        DB 128
        DB 132
        DB 125
        DB 0
        DB 0
        DB 127
        DB 16
        DB 40
        DB 68
        DB 0
        DB 0
        DB 0
        DB 65
        DB 127
        DB 64
        DB 0
        DB 0
        DB 124
        DB 4
        DB 24
        DB 4
        DB 120
        DB 0
        DB 124
        DB 8
        DB 4
        DB 4
        DB 120
        DB 0
        DB 56
        DB 68
        DB 68
        DB 68
        DB 56
        DB 0
        DB 252
        DB 36
        DB 36
        DB 36
        DB 24
        DB 0
        DB 24
        DB 36
        DB 36
        DB 24
        DB 252
        DB 0
        DB 124
        DB 8
        DB 4
        DB 4
        DB 8
        DB 0
        DB 72
        DB 84
        DB 84
        DB 84
        DB 32
        DB 0
        DB 4
        DB 63
        DB 68
        DB 64
        DB 32
        DB 0
        DB 60
        DB 64
        DB 64
        DB 32
        DB 124
        DB 0
        DB 28
        DB 32
        DB 64
        DB 32
        DB 28
        DB 0
        DB 60
        DB 64
        DB 48
        DB 64
        DB 60
        DB 0
        DB 68
        DB 40
        DB 16
        DB 40
        DB 68
        DB 0
        DB 28
        DB 160
        DB 160
        DB 160
        DB 124
        DB 0
        DB 68
        DB 100
        DB 84
        DB 76
        DB 68
        DB 20
        DB 20
        DB 20
        DB 20
        DB 20
        DB 20

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
// unsigned char const __xdata_rom F8X16[1520]
F8X16:
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 248
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 51
        DB 48
        DB 0
        DB 0
        DB 0
        DB 0
        DB 16
        DB 12
        DB 6
        DB 16
        DB 12
        DB 6
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 64
        DB 192
        DB 120
        DB 64
        DB 192
        DB 120
        DB 64
        DB 0
        DB 4
        DB 63
        DB 4
        DB 4
        DB 63
        DB 4
        DB 4
        DB 0
        DB 0
        DB 112
        DB 136
        DB 252
        DB 8
        DB 48
        DB 0
        DB 0
        DB 0
        DB 24
        DB 32
        DB 255
        DB 33
        DB 30
        DB 0
        DB 0
        DB 240
        DB 8
        DB 240
        DB 0
        DB 224
        DB 24
        DB 0
        DB 0
        DB 0
        DB 33
        DB 28
        DB 3
        DB 30
        DB 33
        DB 30
        DB 0
        DB 0
        DB 240
        DB 8
        DB 136
        DB 112
        DB 0
        DB 0
        DB 0
        DB 30
        DB 33
        DB 35
        DB 36
        DB 25
        DB 39
        DB 33
        DB 16
        DB 16
        DB 22
        DB 14
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 224
        DB 24
        DB 4
        DB 2
        DB 0
        DB 0
        DB 0
        DB 0
        DB 7
        DB 24
        DB 32
        DB 64
        DB 0
        DB 0
        DB 2
        DB 4
        DB 24
        DB 224
        DB 0
        DB 0
        DB 0
        DB 0
        DB 64
        DB 32
        DB 24
        DB 7
        DB 0
        DB 0
        DB 0
        DB 64
        DB 64
        DB 128
        DB 240
        DB 128
        DB 64
        DB 64
        DB 0
        DB 2
        DB 2
        DB 1
        DB 15
        DB 1
        DB 2
        DB 2
        DB 0
        DB 0
        DB 0
        DB 0
        DB 240
        DB 0
        DB 0
        DB 0
        DB 0
        DB 1
        DB 1
        DB 1
        DB 31
        DB 1
        DB 1
        DB 1
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 176
        DB 112
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 1
        DB 1
        DB 1
        DB 1
        DB 1
        DB 1
        DB 1
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 48
        DB 48
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 96
        DB 24
        DB 4
        DB 0
        DB 96
        DB 24
        DB 6
        DB 1
        DB 0
        DB 0
        DB 0
        DB 0
        DB 224
        DB 16
        DB 8
        DB 8
        DB 16
        DB 224
        DB 0
        DB 0
        DB 15
        DB 16
        DB 32
        DB 32
        DB 16
        DB 15
        DB 0
        DB 0
        DB 16
        DB 16
        DB 248
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 32
        DB 32
        DB 63
        DB 32
        DB 32
        DB 0
        DB 0
        DB 0
        DB 112
        DB 8
        DB 8
        DB 8
        DB 136
        DB 112
        DB 0
        DB 0
        DB 48
        DB 40
        DB 36
        DB 34
        DB 33
        DB 48
        DB 0
        DB 0
        DB 48
        DB 8
        DB 136
        DB 136
        DB 72
        DB 48
        DB 0
        DB 0
        DB 24
        DB 32
        DB 32
        DB 32
        DB 17
        DB 14
        DB 0
        DB 0
        DB 0
        DB 192
        DB 32
        DB 16
        DB 248
        DB 0
        DB 0
        DB 0
        DB 7
        DB 4
        DB 36
        DB 36
        DB 63
        DB 36
        DB 0
        DB 0
        DB 248
        DB 8
        DB 136
        DB 136
        DB 8
        DB 8
        DB 0
        DB 0
        DB 25
        DB 33
        DB 32
        DB 32
        DB 17
        DB 14
        DB 0
        DB 0
        DB 224
        DB 16
        DB 136
        DB 136
        DB 24
        DB 0
        DB 0
        DB 0
        DB 15
        DB 17
        DB 32
        DB 32
        DB 17
        DB 14
        DB 0
        DB 0
        DB 56
        DB 8
        DB 8
        DB 200
        DB 56
        DB 8
        DB 0
        DB 0
        DB 0
        DB 0
        DB 63
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 112
        DB 136
        DB 8
        DB 8
        DB 136
        DB 112
        DB 0
        DB 0
        DB 28
        DB 34
        DB 33
        DB 33
        DB 34
        DB 28
        DB 0
        DB 0
        DB 224
        DB 16
        DB 8
        DB 8
        DB 16
        DB 224
        DB 0
        DB 0
        DB 0
        DB 49
        DB 34
        DB 34
        DB 17
        DB 15
        DB 0
        DB 0
        DB 0
        DB 0
        DB 192
        DB 192
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 48
        DB 48
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 96
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 64
        DB 32
        DB 16
        DB 8
        DB 0
        DB 0
        DB 1
        DB 2
        DB 4
        DB 8
        DB 16
        DB 32
        DB 0
        DB 64
        DB 64
        DB 64
        DB 64
        DB 64
        DB 64
        DB 64
        DB 0
        DB 4
        DB 4
        DB 4
        DB 4
        DB 4
        DB 4
        DB 4
        DB 0
        DB 0
        DB 8
        DB 16
        DB 32
        DB 64
        DB 128
        DB 0
        DB 0
        DB 0
        DB 32
        DB 16
        DB 8
        DB 4
        DB 2
        DB 1
        DB 0
        DB 0
        DB 112
        DB 72
        DB 8
        DB 8
        DB 8
        DB 240
        DB 0
        DB 0
        DB 0
        DB 0
        DB 48
        DB 54
        DB 1
        DB 0
        DB 0
        DB 192
        DB 48
        DB 200
        DB 40
        DB 232
        DB 16
        DB 224
        DB 0
        DB 7
        DB 24
        DB 39
        DB 36
        DB 35
        DB 20
        DB 11
        DB 0
        DB 0
        DB 0
        DB 192
        DB 56
        DB 224
        DB 0
        DB 0
        DB 0
        DB 32
        DB 60
        DB 35
        DB 2
        DB 2
        DB 39
        DB 56
        DB 32
        DB 8
        DB 248
        DB 136
        DB 136
        DB 136
        DB 112
        DB 0
        DB 0
        DB 32
        DB 63
        DB 32
        DB 32
        DB 32
        DB 17
        DB 14
        DB 0
        DB 192
        DB 48
        DB 8
        DB 8
        DB 8
        DB 8
        DB 56
        DB 0
        DB 7
        DB 24
        DB 32
        DB 32
        DB 32
        DB 16
        DB 8
        DB 0
        DB 8
        DB 248
        DB 8
        DB 8
        DB 8
        DB 16
        DB 224
        DB 0
        DB 32
        DB 63
        DB 32
        DB 32
        DB 32
        DB 16
        DB 15
        DB 0
        DB 8
        DB 248
        DB 136
        DB 136
        DB 232
        DB 8
        DB 16
        DB 0
        DB 32
        DB 63
        DB 32
        DB 32
        DB 35
        DB 32
        DB 24
        DB 0
        DB 8
        DB 248
        DB 136
        DB 136
        DB 232
        DB 8
        DB 16
        DB 0
        DB 32
        DB 63
        DB 32
        DB 0
        DB 3
        DB 0
        DB 0
        DB 0
        DB 192
        DB 48
        DB 8
        DB 8
        DB 8
        DB 56
        DB 0
        DB 0
        DB 7
        DB 24
        DB 32
        DB 32
        DB 34
        DB 30
        DB 2
        DB 0
        DB 8
        DB 248
        DB 8
        DB 0
        DB 0
        DB 8
        DB 248
        DB 8
        DB 32
        DB 63
        DB 33
        DB 1
        DB 1
        DB 33
        DB 63
        DB 32
        DB 0
        DB 8
        DB 8
        DB 248
        DB 8
        DB 8
        DB 0
        DB 0
        DB 0
        DB 32
        DB 32
        DB 63
        DB 32
        DB 32
        DB 0
        DB 0
        DB 0
        DB 0
        DB 8
        DB 8
        DB 248
        DB 8
        DB 8
        DB 0
        DB 192
        DB 128
        DB 128
        DB 128
        DB 127
        DB 0
        DB 0
        DB 0
        DB 8
        DB 248
        DB 136
        DB 192
        DB 40
        DB 24
        DB 8
        DB 0
        DB 32
        DB 63
        DB 32
        DB 1
        DB 38
        DB 56
        DB 32
        DB 0
        DB 8
        DB 248
        DB 8
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 32
        DB 63
        DB 32
        DB 32
        DB 32
        DB 32
        DB 48
        DB 0
        DB 8
        DB 248
        DB 248
        DB 0
        DB 248
        DB 248
        DB 8
        DB 0
        DB 32
        DB 63
        DB 0
        DB 63
        DB 0
        DB 63
        DB 32
        DB 0
        DB 8
        DB 248
        DB 48
        DB 192
        DB 0
        DB 8
        DB 248
        DB 8
        DB 32
        DB 63
        DB 32
        DB 0
        DB 7
        DB 24
        DB 63
        DB 0
        DB 224
        DB 16
        DB 8
        DB 8
        DB 8
        DB 16
        DB 224
        DB 0
        DB 15
        DB 16
        DB 32
        DB 32
        DB 32
        DB 16
        DB 15
        DB 0
        DB 8
        DB 248
        DB 8
        DB 8
        DB 8
        DB 8
        DB 240
        DB 0
        DB 32
        DB 63
        DB 33
        DB 1
        DB 1
        DB 1
        DB 0
        DB 0
        DB 224
        DB 16
        DB 8
        DB 8
        DB 8
        DB 16
        DB 224
        DB 0
        DB 15
        DB 24
        DB 36
        DB 36
        DB 56
        DB 80
        DB 79
        DB 0
        DB 8
        DB 248
        DB 136
        DB 136
        DB 136
        DB 136
        DB 112
        DB 0
        DB 32
        DB 63
        DB 32
        DB 0
        DB 3
        DB 12
        DB 48
        DB 32
        DB 0
        DB 112
        DB 136
        DB 8
        DB 8
        DB 8
        DB 56
        DB 0
        DB 0
        DB 56
        DB 32
        DB 33
        DB 33
        DB 34
        DB 28
        DB 0
        DB 24
        DB 8
        DB 8
        DB 248
        DB 8
        DB 8
        DB 24
        DB 0
        DB 0
        DB 0
        DB 32
        DB 63
        DB 32
        DB 0
        DB 0
        DB 0
        DB 8
        DB 248
        DB 8
        DB 0
        DB 0
        DB 8
        DB 248
        DB 8
        DB 0
        DB 31
        DB 32
        DB 32
        DB 32
        DB 32
        DB 31
        DB 0
        DB 8
        DB 120
        DB 136
        DB 0
        DB 0
        DB 200
        DB 56
        DB 8
        DB 0
        DB 0
        DB 7
        DB 56
        DB 14
        DB 1
        DB 0
        DB 0
        DB 248
        DB 8
        DB 0
        DB 248
        DB 0
        DB 8
        DB 248
        DB 0
        DB 3
        DB 60
        DB 7
        DB 0
        DB 7
        DB 60
        DB 3
        DB 0
        DB 8
        DB 24
        DB 104
        DB 128
        DB 128
        DB 104
        DB 24
        DB 8
        DB 32
        DB 48
        DB 44
        DB 3
        DB 3
        DB 44
        DB 48
        DB 32
        DB 8
        DB 56
        DB 200
        DB 0
        DB 200
        DB 56
        DB 8
        DB 0
        DB 0
        DB 0
        DB 32
        DB 63
        DB 32
        DB 0
        DB 0
        DB 0
        DB 16
        DB 8
        DB 8
        DB 8
        DB 200
        DB 56
        DB 8
        DB 0
        DB 32
        DB 56
        DB 38
        DB 33
        DB 32
        DB 32
        DB 24
        DB 0
        DB 0
        DB 0
        DB 0
        DB 254
        DB 2
        DB 2
        DB 2
        DB 0
        DB 0
        DB 0
        DB 0
        DB 127
        DB 64
        DB 64
        DB 64
        DB 0
        DB 0
        DB 12
        DB 48
        DB 192
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 1
        DB 6
        DB 56
        DB 192
        DB 0
        DB 0
        DB 2
        DB 2
        DB 2
        DB 254
        DB 0
        DB 0
        DB 0
        DB 0
        DB 64
        DB 64
        DB 64
        DB 127
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 4
        DB 2
        DB 2
        DB 2
        DB 4
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 2
        DB 2
        DB 4
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 0
        DB 25
        DB 36
        DB 34
        DB 34
        DB 34
        DB 63
        DB 32
        DB 8
        DB 248
        DB 0
        DB 128
        DB 128
        DB 0
        DB 0
        DB 0
        DB 0
        DB 63
        DB 17
        DB 32
        DB 32
        DB 17
        DB 14
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 0
        DB 14
        DB 17
        DB 32
        DB 32
        DB 32
        DB 17
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 136
        DB 248
        DB 0
        DB 0
        DB 14
        DB 17
        DB 32
        DB 32
        DB 16
        DB 63
        DB 32
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 0
        DB 31
        DB 34
        DB 34
        DB 34
        DB 34
        DB 19
        DB 0
        DB 0
        DB 128
        DB 128
        DB 240
        DB 136
        DB 136
        DB 136
        DB 24
        DB 0
        DB 32
        DB 32
        DB 63
        DB 32
        DB 32
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 107
        DB 148
        DB 148
        DB 148
        DB 147
        DB 96
        DB 0
        DB 8
        DB 248
        DB 0
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 32
        DB 63
        DB 33
        DB 0
        DB 0
        DB 32
        DB 63
        DB 32
        DB 0
        DB 128
        DB 152
        DB 152
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 32
        DB 32
        DB 63
        DB 32
        DB 32
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 152
        DB 152
        DB 0
        DB 0
        DB 0
        DB 192
        DB 128
        DB 128
        DB 128
        DB 127
        DB 0
        DB 0
        DB 8
        DB 248
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 0
        DB 32
        DB 63
        DB 36
        DB 2
        DB 45
        DB 48
        DB 32
        DB 0
        DB 0
        DB 8
        DB 8
        DB 248
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 32
        DB 32
        DB 63
        DB 32
        DB 32
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 32
        DB 63
        DB 32
        DB 0
        DB 63
        DB 32
        DB 0
        DB 63
        DB 128
        DB 128
        DB 0
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 32
        DB 63
        DB 33
        DB 0
        DB 0
        DB 32
        DB 63
        DB 32
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 0
        DB 31
        DB 32
        DB 32
        DB 32
        DB 32
        DB 31
        DB 0
        DB 128
        DB 128
        DB 0
        DB 128
        DB 128
        DB 0
        DB 0
        DB 0
        DB 128
        DB 255
        DB 161
        DB 32
        DB 32
        DB 17
        DB 14
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 14
        DB 17
        DB 32
        DB 32
        DB 160
        DB 255
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 128
        DB 128
        DB 128
        DB 0
        DB 32
        DB 32
        DB 63
        DB 33
        DB 32
        DB 0
        DB 1
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 51
        DB 36
        DB 36
        DB 36
        DB 36
        DB 25
        DB 0
        DB 0
        DB 128
        DB 128
        DB 224
        DB 128
        DB 128
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 31
        DB 32
        DB 32
        DB 0
        DB 0
        DB 128
        DB 128
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 0
        DB 0
        DB 31
        DB 32
        DB 32
        DB 32
        DB 16
        DB 63
        DB 32
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 0
        DB 1
        DB 14
        DB 48
        DB 8
        DB 6
        DB 1
        DB 0
        DB 128
        DB 128
        DB 0
        DB 128
        DB 0
        DB 128
        DB 128
        DB 128
        DB 15
        DB 48
        DB 12
        DB 3
        DB 12
        DB 48
        DB 15
        DB 0
        DB 0
        DB 128
        DB 128
        DB 0
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 32
        DB 49
        DB 46
        DB 14
        DB 49
        DB 32
        DB 0
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 129
        DB 142
        DB 112
        DB 24
        DB 6
        DB 1
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 33
        DB 48
        DB 44
        DB 34
        DB 33
        DB 48
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 124
        DB 2
        DB 2
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 63
        DB 64
        DB 64
        DB 0
        DB 0
        DB 0
        DB 0
        DB 255
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 255
        DB 0
        DB 0
        DB 0
        DB 0
        DB 2
        DB 2
        DB 124
        DB 128
        DB 0
        DB 0
        DB 0
        DB 0
        DB 64
        DB 64
        DB 63
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 6
        DB 1
        DB 1
        DB 2
        DB 2
        DB 4
        DB 4
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0

        RSEG XDATA_I:XDATA:NOROOT(0)
// unsigned char BMP[1024]
BMP:
        DATA8
        DS 1024
        REQUIRE `?<Initializer for BMP>`
        REQUIRE __INIT_XDATA_I
//    2 #include <ioCC2530.h>

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f4H
// unsigned char volatile __sfr P1SEL
P1SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0feH
// unsigned char volatile __sfr P1DIR
P1DIR:
        DATA8
        DS 1
//    3 #include "OnBoard.h"
//    4 
//    5 #include "oled.h"
//    6 
//    7 
//    8 #define LCD_SCL P1_2       //SCLK  时钟 D0（SCLK）
//    9 #define LCD_SDA P1_3       //SDA   D1（MOSI） 数据
//   10 #define LCD_RST P1_7       //_RES  hardware reset   复位 
//   11 #define LCD_DC  P0_0       //A0  H/L 命令数据选通端，H：数据，L:命令
//   12 
//   13 #define XLevelL        0x00
//   14 #define XLevelH        0x10
//   15 #define XLevel         ((XLevelH&0x0F)*16+XLevelL)
//   16 #define Max_Column     128
//   17 #define Max_Row        64
//   18 #define Brightness     0xCF 
//   19 #define X_WIDTH        128
//   20 #define Y_WIDTH        64
//   21 
//   22 
//   23 static void DelayMS(unsigned int msec)
//   24 { 
//   25     unsigned int i,j;
//   26     
//   27     for (i=0; i<msec; i++)
//   28         for (j=0; j<530; j++);
//   29 }
//   30 
//   31 /*********************LCD 延时1ms************************************/
//   32 static void LCD_DLY_ms(unsigned int ms)
//   33 {                         
//   34     unsigned int a;
//   35     while(ms)
//   36     {
//   37         a=1800;
//   38         while(a--);
//   39         ms--;
//   40     }
//   41     return;
//   42 }
//   43 /*********************LCD写数据************************************/ 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   44 static void LCD_WrDat(unsigned char dat)     
LCD_WrDat:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function LCD_WrDat
        CODE
//   45 {
        ; Saved register size: 0
        ; Auto size: 0
//   46     unsigned char i=8, temp=0;
//   47     LCD_DC=1;  
        SETB    0x80.0
//   48     for(i=0;i<8;i++) //发送一个八位数据 
        MOV     R0,#0x8
//   49     {
//   50         LCD_SCL=0;  
??LCD_WrDat_0:
        CLR     0x90.2
//   51         
//   52         temp = dat&0x80;
//   53         if (temp == 0)
        MOV     A,R1
        MOV     C,0xE0 /* A   */.7
        JC      ??LCD_WrDat_1
//   54         {
//   55             LCD_SDA = 0;
        CLR     0x90.3
        SJMP    ??LCD_WrDat_2
//   56         }
//   57         else
//   58         {
//   59             LCD_SDA = 1;
??LCD_WrDat_1:
        SETB    0x90.3
//   60         }
//   61         LCD_SCL=1;             
??LCD_WrDat_2:
        SETB    0x90.2
//   62         dat<<=1;    
        CLR     C
        RLC     A
        MOV     R1,A
//   63     }
        DEC     R0
        MOV     A,R0
        JNZ     ??LCD_WrDat_0
//   64 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock0
        REQUIRE _A_P0
        REQUIRE _A_P1
//   65 /*********************LCD写命令************************************/                                        

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   66 static void LCD_WrCmd(unsigned char cmd)
LCD_WrCmd:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function LCD_WrCmd
        CODE
//   67 {
        ; Saved register size: 0
        ; Auto size: 0
//   68     unsigned char i=8, temp=0;
//   69     LCD_DC=0;
        CLR     0x80.0
//   70     for(i=0;i<8;i++) //发送一个八位数据 
        MOV     R0,#0x8
//   71     { 
//   72         LCD_SCL=0; 
??LCD_WrCmd_0:
        CLR     0x90.2
//   73        
//   74         temp = cmd&0x80;
//   75         if (temp == 0)
        MOV     A,R1
        MOV     C,0xE0 /* A   */.7
        JC      ??LCD_WrCmd_1
//   76         {
//   77             LCD_SDA = 0;
        CLR     0x90.3
        SJMP    ??LCD_WrCmd_2
//   78         }
//   79         else
//   80         {
//   81             LCD_SDA = 1;
??LCD_WrCmd_1:
        SETB    0x90.3
//   82         }
//   83         LCD_SCL=1;
??LCD_WrCmd_2:
        SETB    0x90.2
//   84         cmd<<=1;;        
        CLR     C
        RLC     A
        MOV     R1,A
//   85     }     
        DEC     R0
        MOV     A,R0
        JNZ     ??LCD_WrCmd_0
//   86 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock1
        REQUIRE _A_P0
        REQUIRE _A_P1
//   87 /*********************LCD 设置坐标************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   88 void LCD_Set_Pos(unsigned char x, unsigned char y) 
LCD_Set_Pos:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function LCD_Set_Pos
        CODE
//   89 { 
        FUNCALL LCD_Set_Pos, LCD_WrCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Set_Pos, LCD_WrCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Set_Pos, LCD_WrCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,R2
        MOV     R7,A
//   90     LCD_WrCmd(0xb0+y);
        ; Setup parameters for call to function LCD_WrCmd
        MOV     A,#-0x50
        ADD     A,R7
        MOV     R1,A
        LCALL   ??LCD_WrCmd?relay
//   91     LCD_WrCmd(((x&0xf0)>>4)|0x10);
        ; Setup parameters for call to function LCD_WrCmd
        MOV     A,R6
        SWAP    A
        ANL     A,#0xf
        ORL     A,#0x10
        MOV     R1,A
        LCALL   ??LCD_WrCmd?relay
//   92     LCD_WrCmd((x&0x0f)|0x01); 
        ; Setup parameters for call to function LCD_WrCmd
        MOV     A,#0xf
        ANL     A,R6
        ORL     A,#0x1
        MOV     R1,A
        LCALL   ??LCD_WrCmd?relay
          CFI EndBlock cfiBlock2
//   93 } 
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock3
//   94 /*********************LCD全屏************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   95 void LCD_Fill(unsigned char bmp_dat) 
LCD_Fill:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function LCD_Fill
        CODE
//   96 {
        FUNCALL LCD_Fill, LCD_WrCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Fill, LCD_WrCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Fill, LCD_WrCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Fill, LCD_WrDat
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//   97     unsigned char y,x;
//   98     for(y=0;y<8;y++)
        MOV     ?V0 + 0,#0x0
//   99     {
//  100         LCD_WrCmd(0xb0+y);
??LCD_Fill_0:
        ; Setup parameters for call to function LCD_WrCmd
        MOV     A,#-0x50
        ADD     A,?V0 + 0
        MOV     R1,A
        LCALL   ??LCD_WrCmd?relay
//  101         LCD_WrCmd(0x01);
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x1
        LCALL   ??LCD_WrCmd?relay
//  102         LCD_WrCmd(0x10);
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x10
        LCALL   ??LCD_WrCmd?relay
//  103         for(x=0;x<X_WIDTH;x++)
        MOV     R7,#-0x80
//  104             LCD_WrDat(bmp_dat);
??LCD_Fill_1:
        ; Setup parameters for call to function LCD_WrDat
        MOV     A,R6
        MOV     R1,A
        LCALL   ??LCD_WrDat?relay
        DEC     R7
        MOV     A,R7
        JNZ     ??LCD_Fill_1
//  105     }
        INC     ?V0 + 0
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,#0x8
        JC      ??LCD_Fill_0
//  106 }
        SJMP    ?Subroutine0
          CFI EndBlock cfiBlock4
//  107 /*********************LCD复位************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  108 void LCD_CLS(void)
LCD_CLS:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function LCD_CLS
        CODE
//  109 {
        FUNCALL LCD_CLS, LCD_WrCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_CLS, LCD_WrCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_CLS, LCD_WrCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_CLS, LCD_WrDat
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//  110     unsigned char y,x;    
//  111     for(y=0;y<8;y++)
        MOV     R7,#0x0
//  112     {
//  113         LCD_WrCmd(0xb0+y);
??LCD_CLS_0:
        ; Setup parameters for call to function LCD_WrCmd
        MOV     A,#-0x50
        ADD     A,R7
        MOV     R1,A
        LCALL   ??LCD_WrCmd?relay
//  114         LCD_WrCmd(0x01);
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x1
        LCALL   ??LCD_WrCmd?relay
//  115         LCD_WrCmd(0x10); 
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x10
        LCALL   ??LCD_WrCmd?relay
//  116         for(x=0;x<X_WIDTH;x++)
        MOV     R6,#-0x80
//  117             LCD_WrDat(0);
??LCD_CLS_1:
        ; Setup parameters for call to function LCD_WrDat
        MOV     R1,#0x0
        LCALL   ??LCD_WrDat?relay
        DEC     R6
        MOV     A,R6
        JNZ     ??LCD_CLS_1
//  118     }
        INC     R7
        MOV     A,R7
        CLR     C
        SUBB    A,#0x8
        JC      ??LCD_CLS_0
//  119 }
        SJMP    ?Subroutine0
          CFI EndBlock cfiBlock5
//  120 /*********************LCD初始化************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  121 void LCD_Init(void)     
LCD_Init:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function LCD_Init
        CODE
//  122 {  
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_WrCmd
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_Fill
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_Init, LCD_Set_Pos
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  123     P0SEL &= 0xFE; //让P0.0为普通IO口，
        ANL     0xf3,#0xfe
//  124     P0DIR |= 0x01; //让P0.0为为输出
        ORL     0xfd,#0x1
//  125 
//  126     P1SEL &= 0x73; //让 P1.2 P1.3 P1.7为普通IO口
        ANL     0xf4,#0x73
//  127     P1DIR |= 0x8C; //把 P1.2 P1.3 1.7设置为输出
        ORL     0xfe,#0x8c
//  128     
//  129     LCD_SCL=1;
        SETB    0x90.2
//  130     LCD_RST=0;
        CLR     0x90.7
//  131     LCD_DLY_ms(50);
        MOV     R4,#0x32
??LCD_Init_0:
        MOV     R0,#0x8
        MOV     R1,#0x7
??LCD_Init_1:
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,R2
        ADD     A,#-0x1
        DEC     R0
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     R1,A
        MOV     A,R2
        ORL     A,R3
        JNZ     ??LCD_Init_1
        DEC     R4
        MOV     A,R4
        JNZ     ??LCD_Init_0
//  132     LCD_RST=1;      //从上电到下面开始初始化要有足够的时间，即等待RC复位完毕   
        SETB    0x90.7
//  133     LCD_WrCmd(0xae);//--turn off oled panel
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x52
        LCALL   ??LCD_WrCmd?relay
//  134     LCD_WrCmd(0x00);//---set low column address
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x0
        LCALL   ??LCD_WrCmd?relay
//  135     LCD_WrCmd(0x10);//---set high column address
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x10
        LCALL   ??LCD_WrCmd?relay
//  136     LCD_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x40
        LCALL   ??LCD_WrCmd?relay
//  137     LCD_WrCmd(0x81);//--set contrast control register
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x7f
        LCALL   ??LCD_WrCmd?relay
//  138     LCD_WrCmd(0xcf); // Set SEG Output Current Brightness
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x31
        LCALL   ??LCD_WrCmd?relay
//  139     LCD_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x5f
        LCALL   ??LCD_WrCmd?relay
//  140     LCD_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x38
        LCALL   ??LCD_WrCmd?relay
//  141     LCD_WrCmd(0xa6);//--set normal display
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x5a
        LCALL   ??LCD_WrCmd?relay
//  142     LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x58
        LCALL   ??LCD_WrCmd?relay
//  143     LCD_WrCmd(0x3f);//--1/64 duty
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x3f
        LCALL   ??LCD_WrCmd?relay
//  144     LCD_WrCmd(0xd3);//-set display offset    Shift Mapping RAM Counter (0x00~0x3F)
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x2d
        LCALL   ??LCD_WrCmd?relay
//  145     LCD_WrCmd(0x00);//-not offset
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x0
        LCALL   ??LCD_WrCmd?relay
//  146     LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x2b
        LCALL   ??LCD_WrCmd?relay
//  147     LCD_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x80
        LCALL   ??LCD_WrCmd?relay
//  148     LCD_WrCmd(0xd9);//--set pre-charge period
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x27
        LCALL   ??LCD_WrCmd?relay
//  149     LCD_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0xf
        LCALL   ??LCD_WrCmd?relay
//  150     LCD_WrCmd(0xda);//--set com pins hardware configuration
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x26
        LCALL   ??LCD_WrCmd?relay
//  151     LCD_WrCmd(0x12);
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x12
        LCALL   ??LCD_WrCmd?relay
//  152     LCD_WrCmd(0xdb);//--set vcomh
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x25
        LCALL   ??LCD_WrCmd?relay
//  153     LCD_WrCmd(0x40);//Set VCOM Deselect Level
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x40
        LCALL   ??LCD_WrCmd?relay
//  154     LCD_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x20
        LCALL   ??LCD_WrCmd?relay
//  155     LCD_WrCmd(0x02);//
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x2
        LCALL   ??LCD_WrCmd?relay
//  156     LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x73
        LCALL   ??LCD_WrCmd?relay
//  157     LCD_WrCmd(0x14);//--set(0x10) disable
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#0x14
        LCALL   ??LCD_WrCmd?relay
//  158     LCD_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x5c
        LCALL   ??LCD_WrCmd?relay
//  159     LCD_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x5a
        LCALL   ??LCD_WrCmd?relay
//  160     LCD_WrCmd(0xaf);//--turn on oled panel
        ; Setup parameters for call to function LCD_WrCmd
        MOV     R1,#-0x51
        LCALL   ??LCD_WrCmd?relay
//  161     LCD_Fill(0x00);  //初始清屏
        ; Setup parameters for call to function LCD_Fill
        MOV     R1,#0x0
        LCALL   ??LCD_Fill?relay
//  162     LCD_Set_Pos(0,0);     
        ; Setup parameters for call to function LCD_Set_Pos
        MOV     R2,#0x0
        MOV     R1,#0x0
        LCALL   ??LCD_Set_Pos?relay
//  163 } 
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock6
        REQUIRE P0SEL
        REQUIRE P0DIR
        REQUIRE P1SEL
        REQUIRE P1DIR
        REQUIRE _A_P1
//  164 /***************功能描述：显示6*8一组标准ASCII字符串    显示的坐标（x,y），y为页范围0～7****************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  165 void LCD_P6x8Str(unsigned char x, unsigned char y,unsigned char ch[])
LCD_P6x8Str:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function LCD_P6x8Str
        CODE
//  166 {
        FUNCALL LCD_P6x8Str, LCD_Set_Pos
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_P6x8Str, LCD_WrDat
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,R2
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  167     unsigned char c=0,i=0,j=0;      
        MOV     ?V0 + 4,#0x0
        SJMP    ??LCD_P6x8Str_0
//  168     while (ch[j]!='\0')
//  169     {    
//  170         c =ch[j]-32;
??LCD_P6x8Str_1:
        ADD     A,#-0x20
        MOV     ?V0 + 6,A
//  171         if(x>126){x=0;y++;}
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,#0x7f
        JC      ??LCD_P6x8Str_2
        MOV     ?V0 + 0,#0x0
        INC     ?V0 + 1
//  172         LCD_Set_Pos(x,y);    
??LCD_P6x8Str_2:
        ; Setup parameters for call to function LCD_Set_Pos
        MOV     R2,?V0 + 1
        MOV     R1,?V0 + 0
        LCALL   ??LCD_Set_Pos?relay
//  173         for(i=0;i<6;i++)     
        MOV     ?V0 + 5,#0x0
//  174             LCD_WrDat(F6x8[c][i]);  
??LCD_P6x8Str_3:
        ; Setup parameters for call to function LCD_WrDat
        MOV     ?V0 + 2,?V0 + 5
        MOV     A,?V0 + 6
        MOV     B,#0x6
        MUL     AB
        MOV     R0,A
        MOV     R1,B
        MOV     A,#F6x8 & 0xff
        ADD     A,R0
        MOV     R0,A
        MOV     A,#(F6x8 >> 8) & 0xff
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,?V0 + 2
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??LCD_WrDat?relay
        INC     ?V0 + 5
        MOV     A,?V0 + 5
        CLR     C
        SUBB    A,#0x6
        JC      ??LCD_P6x8Str_3
//  175         x+=6;
        MOV     A,#0x6
        ADD     A,?V0 + 0
        MOV     ?V0 + 0,A
//  176         j++;
        INC     ?V0 + 4
//  177     }
??LCD_P6x8Str_0:
        MOV     ?V0 + 2,?V0 + 4
        LCALL   ?Subroutine2 & 0xFFFF
??CrossCallReturnLabel_2:
        JNZ     ??LCD_P6x8Str_1
//  178 }
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock7
//  179 /*******************功能描述：显示8*16一组标准ASCII字符串     显示的坐标（x,y），y为页范围0～7****************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  180 void LCD_P8x16Str(unsigned char x, unsigned char y,unsigned char ch[])
LCD_P8x16Str:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function LCD_P8x16Str
        CODE
//  181 {
        FUNCALL LCD_P8x16Str, LCD_Set_Pos
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_P8x16Str, LCD_WrDat
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_P8x16Str, LCD_Set_Pos
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_P8x16Str, LCD_WrDat
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x11
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
        ; Saved register size: 17
        ; Auto size: 0
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,R2
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  182     unsigned char c=0,i=0,j=0;
        MOV     ?V0 + 7,#0x0
        SJMP    ??LCD_P8x16Str_0
//  183     while (ch[j]!='\0')
//  184     {    
//  185         c =ch[j]-32;
??LCD_P8x16Str_1:
        ADD     A,#-0x20
        MOV     ?V0 + 8,A
//  186         if(x>120){x=0;y++;}
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,#0x79
        JC      ??LCD_P8x16Str_2
        MOV     ?V0 + 0,#0x0
        INC     ?V0 + 1
//  187         LCD_Set_Pos(x,y);    
??LCD_P8x16Str_2:
        ; Setup parameters for call to function LCD_Set_Pos
        MOV     R2,?V0 + 1
        MOV     R1,?V0 + 0
        LCALL   ??LCD_Set_Pos?relay
//  188         for(i=0;i<8;i++)     
        MOV     ?V0 + 6,#0x0
//  189             LCD_WrDat(F8X16[c*16+i]);
??LCD_P8x16Str_3:
        ; Setup parameters for call to function LCD_WrDat
        MOV     ?V0 + 4,?V0 + 8
        MOV     ?V0 + 5,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0 + 4
        LCALL   ?S_SHL
        LCALL   ?Subroutine4 & 0xFFFF
??CrossCallReturnLabel_6:
        MOV     A,#F8X16 & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#(F8X16 >> 8) & 0xff
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??LCD_WrDat?relay
        INC     ?V0 + 6
        MOV     A,?V0 + 6
        CLR     C
        SUBB    A,#0x8
        JC      ??LCD_P8x16Str_3
//  190         LCD_Set_Pos(x,y+1);    
        ; Setup parameters for call to function LCD_Set_Pos
        MOV     A,#0x1
        ADD     A,?V0 + 1
        MOV     R2,A
        MOV     R1,?V0 + 0
        LCALL   ??LCD_Set_Pos?relay
//  191         for(i=0;i<8;i++)     
        MOV     ?V0 + 6,#0x0
//  192             LCD_WrDat(F8X16[c*16+i+8]);  
??LCD_P8x16Str_4:
        ; Setup parameters for call to function LCD_WrDat
        MOV     ?V0 + 4,?V0 + 8
        MOV     ?V0 + 5,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0 + 4
        LCALL   ?S_SHL
        LCALL   ?Subroutine4 & 0xFFFF
??CrossCallReturnLabel_7:
        MOV     A,#(F8X16 + 8) & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#((F8X16 + 8) >> 8) & 0xff
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??LCD_WrDat?relay
        INC     ?V0 + 6
        MOV     A,?V0 + 6
        CLR     C
        SUBB    A,#0x8
        JC      ??LCD_P8x16Str_4
//  193         x+=8;
        MOV     A,#0x8
        ADD     A,?V0 + 0
        MOV     ?V0 + 0,A
//  194         j++;
        INC     ?V0 + 7
//  195     }
??LCD_P8x16Str_0:
        MOV     ?V0 + 2,?V0 + 7
        LCALL   ?Subroutine2 & 0xFFFF
??CrossCallReturnLabel_3:
        JZ      $+5
        LJMP    ??LCD_P8x16Str_1 & 0xFFFF
//  196 }
        MOV     R7,#0x9
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock8

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiCond9 Using cfiCommon0
          CFI Function LCD_P8x16Str
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond10 Using cfiCommon0
          CFI (cfiCond10) Function LCD_P8x16Str
          CFI (cfiCond10) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond10) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond10) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond10) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond10) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond10) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond10) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond10) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond10) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond10) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond10) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond10) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond10) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond10) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond10) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond10) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond10) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond10) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond10) CFA_SP SP+0
          CFI (cfiCond10) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker11 Using cfiCommon1
          CFI (cfiPicker11) NoFunction
          CFI (cfiPicker11) Picker
        MOV     ?V0 + 2,?V0 + 6
        MOV     A,?V0 + 4
        ADD     A,?V0 + 2
        MOV     R0,A
        MOV     A,?V0 + 5
        ADDC    A,#0x0
        MOV     R1,A
        RET
          CFI EndBlock cfiCond9
          CFI EndBlock cfiCond10
          CFI EndBlock cfiPicker11

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiCond12 Using cfiCommon0
          CFI Function LCD_P6x8Str
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond13 Using cfiCommon0
          CFI (cfiCond13) Function LCD_P8x16Str
          CFI (cfiCond13) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond13) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond13) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond13) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond13) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond13) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond13) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond13) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond13) CFA_SP SP+0
          CFI (cfiCond13) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker14 Using cfiCommon1
          CFI (cfiPicker14) NoFunction
          CFI (cfiPicker14) Picker
        MOV     A,R6
        ADD     A,?V0 + 2
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond12
          CFI EndBlock cfiCond13
          CFI EndBlock cfiPicker14
//  197 /*****************功能描述：显示16*16点阵  显示的坐标（x,y），y为页范围0～7****************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  198 void LCD_P16x16Ch(unsigned char x, unsigned char y, unsigned char N)
LCD_P16x16Ch:
          CFI Block cfiBlock15 Using cfiCommon0
          CFI Function LCD_P16x16Ch
        CODE
//  199 {
        FUNCALL LCD_P16x16Ch, LCD_Set_Pos
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_P16x16Ch, LCD_WrDat
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_P16x16Ch, LCD_Set_Pos
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL LCD_P16x16Ch, LCD_WrDat
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 0
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,R2
//  200     unsigned char wm=0;
//  201     unsigned int adder=32*N;  //      
        MOV     ?V0 + 2,R3
        MOV     ?V0 + 3,#0x0
        MOV     A,#0x5
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
//  202     LCD_Set_Pos(x , y);
        ; Setup parameters for call to function LCD_Set_Pos
        LCALL   ??LCD_Set_Pos?relay
//  203     for(wm = 0;wm < 16;wm++)  //             
        MOV     ?V0 + 2,#0x10
//  204     {
//  205         LCD_WrDat(F16x16[adder]);    
??LCD_P16x16Ch_0:
        ; Setup parameters for call to function LCD_WrDat
        LCALL   ?Subroutine3 & 0xFFFF
??CrossCallReturnLabel_4:
        LCALL   ??LCD_WrDat?relay
//  206         adder += 1;
        LCALL   ?Subroutine1 & 0xFFFF
//  207     }      
??CrossCallReturnLabel_0:
        JNZ     ??LCD_P16x16Ch_0
//  208     LCD_Set_Pos(x,y + 1); 
        ; Setup parameters for call to function LCD_Set_Pos
        MOV     A,#0x1
        ADD     A,?V0 + 1
        MOV     R2,A
        MOV     R1,?V0 + 0
        LCALL   ??LCD_Set_Pos?relay
//  209     for(wm = 0;wm < 16;wm++) //         
        MOV     ?V0 + 2,#0x10
//  210     {
//  211         LCD_WrDat(F16x16[adder]);
??LCD_P16x16Ch_1:
        ; Setup parameters for call to function LCD_WrDat
        LCALL   ?Subroutine3 & 0xFFFF
??CrossCallReturnLabel_5:
        LCALL   ??LCD_WrDat?relay
//  212         adder += 1;
        LCALL   ?Subroutine1 & 0xFFFF
//  213     }           
??CrossCallReturnLabel_1:
        JNZ     ??LCD_P16x16Ch_1
//  214 }
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock15

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiCond16 Using cfiCommon0
          CFI Function LCD_P16x16Ch
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function LCD_P16x16Ch
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+0
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker18 Using cfiCommon1
          CFI (cfiPicker18) NoFunction
          CFI (cfiPicker18) Picker
        MOV     A,#F16x16 & 0xff
        ADD     A,R6
        MOV     DPL,A
        MOV     A,#(F16x16 >> 8) & 0xff
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiPicker18

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiCond19 Using cfiCommon0
          CFI Function LCD_P16x16Ch
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond20 Using cfiCommon0
          CFI (cfiCond20) Function LCD_P16x16Ch
          CFI (cfiCond20) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond20) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond20) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond20) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond20) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond20) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond20) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond20) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond20) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond20) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond20) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond20) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond20) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond20) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond20) CFA_SP SP+0
          CFI (cfiCond20) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker21 Using cfiCommon1
          CFI (cfiPicker21) NoFunction
          CFI (cfiPicker21) Picker
        MOV     A,R6
        ADD     A,#0x1
        INC     R6
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        DEC     ?V0 + 2
        MOV     A,?V0 + 2
        RET
          CFI EndBlock cfiCond19
          CFI EndBlock cfiCond20
          CFI EndBlock cfiPicker21
//  215 /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7*****************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  216 void Draw_BMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[])
Draw_BMP:
          CFI Block cfiBlock22 Using cfiCommon0
          CFI Function Draw_BMP
        CODE
//  217 {     
        FUNCALL Draw_BMP, LCD_WrDat
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Draw_BMP, LCD_Set_Pos
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 3,R1
        MOV     ?V0 + 6,R3
        MOV     ?V0 + 7,R4
//  218     unsigned int j=0;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
//  219     unsigned char x,y;
//  220     
//  221     if(y1%8==0) y=y1/8;      
//  222     else y=y1/8+1;
//  223     for(y=y0;y<y1;y++)
        MOV     ?V0 + 2,R2
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        SJMP    ??Draw_BMP_0
//  224     {
//  225         LCD_Set_Pos(x0,y);                
//  226         for(x=x0;x<x1;x++)
//  227         {      
//  228             LCD_WrDat(BMP[j++]);            
??Draw_BMP_1:
        ; Setup parameters for call to function LCD_WrDat
        MOV     A,R6
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,?V0 + 1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??LCD_WrDat?relay
        MOV     A,?V0 + 0
        ADD     A,#0x1
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
//  229         }
        INC     ?V0 + 4
??Draw_BMP_2:
        MOV     A,?V0 + 4
        CLR     C
        SUBB    A,?V0 + 6
        JC      ??Draw_BMP_1
        INC     ?V0 + 2
??Draw_BMP_0:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,?V0 + 7
        JNC     ??Draw_BMP_3
        ; Setup parameters for call to function LCD_Set_Pos
        MOV     R2,?V0 + 2
        MOV     R1,?V0 + 3
        LCALL   ??LCD_Set_Pos?relay
        MOV     ?V0 + 4,?V0 + 3
        SJMP    ??Draw_BMP_2
//  230     }
//  231 } 
??Draw_BMP_3:
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock22

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for F16x16>`:
        DATA8
        DB 192
        DB 48
        DB 200
        DB 40
        DB 232
        DB 16
        DB 224
        DB 0
        DB 7
        DB 24
        DB 39
        DB 36
        DB 35
        DB 20
        DB 11
        DB 0
        DB 192
        DB 48
        DB 200
        DB 40
        DB 232
        DB 16
        DB 224
        DB 0
        DB 7
        DB 24
        DB 39
        DB 36
        DB 35
        DB 20
        DB 11
        DB 0
        DB 192
        DB 48
        DB 200
        DB 40
        DB 232
        DB 16
        DB 224
        DB 0
        DB 7
        DB 24
        DB 39
        DB 36
        DB 35
        DB 20
        DB 11
        DB 0
        DB 192
        DB 48
        DB 200
        DB 40
        DB 232
        DB 16
        DB 224
        DB 0
        DB 7
        DB 24
        DB 39
        DB 36
        DB 35
        DB 20
        DB 11
        DB 0
        DB 0
        DB 255
        DB 255
        DB 51
        DB 255
        DB 255
        DB 0
        DB 255
        DB 255
        DB 195
        DB 219
        DB 219
        DB 223
        DB 207
        DB 0
        DB 0
        DB 32
        DB 127
        DB 31
        DB 99
        DB 127
        DB 63
        DB 0
        DB 127
        DB 127
        DB 32
        DB 55
        DB 24
        DB 63
        DB 115
        DB 32
        DB 0
        DB 128
        DB 128
        DB 144
        DB 152
        DB 204
        DB 223
        DB 119
        DB 102
        DB 102
        DB 246
        DB 222
        DB 142
        DB 128
        DB 128
        DB 128
        DB 0
        DB 0
        DB 97
        DB 97
        DB 103
        DB 54
        DB 62
        DB 31
        DB 7
        DB 6
        DB 102
        DB 126
        DB 63
        DB 1
        DB 1
        DB 0
        DB 0
        DB 32
        DB 48
        DB 248
        DB 236
        DB 103
        DB 111
        DB 252
        DB 248
        DB 16
        DB 248
        DB 248
        DB 0
        DB 254
        DB 254
        DB 0
        DB 0
        DB 0
        DB 0
        DB 63
        DB 127
        DB 96
        DB 102
        DB 103
        DB 115
        DB 48
        DB 15
        DB 15
        DB 96
        DB 127
        DB 63
        DB 0
        DB 0
        DB 0
        DB 102
        DB 126
        DB 126
        DB 231
        DB 255
        DB 126
        DB 102
        DB 0
        DB 254
        DB 254
        DB 102
        DB 230
        DB 231
        DB 99
        DB 0
        DB 0
        DB 51
        DB 27
        DB 99
        DB 127
        DB 63
        DB 11
        DB 91
        DB 112
        DB 63
        DB 15
        DB 0
        DB 127
        DB 127
        DB 0
        DB 0
        DB 192
        DB 48
        DB 200
        DB 40
        DB 232
        DB 16
        DB 224
        DB 0
        DB 7
        DB 24
        DB 39
        DB 36
        DB 35
        DB 20
        DB 11
        DB 0
        DB 192
        DB 48
        DB 200
        DB 40
        DB 232
        DB 16
        DB 224
        DB 0
        DB 7
        DB 24
        DB 39
        DB 36
        DB 35
        DB 20
        DB 11
        DB 0
        DB 192
        DB 48
        DB 200
        DB 40
        DB 232
        DB 16
        DB 224
        DB 0
        DB 7
        DB 24
        DB 39
        DB 36
        DB 35
        DB 20
        DB 11
        DB 0
        DB 192
        DB 48
        DB 200
        DB 40
        DB 232
        DB 16
        DB 224
        DB 0
        DB 7
        DB 24
        DB 39
        DB 36
        DB 35
        DB 20
        DB 11
        DB 0
        DB 16
        DB 97
        DB 6
        DB 224
        DB 0
        DB 38
        DB 34
        DB 26
        DB 2
        DB 194
        DB 10
        DB 18
        DB 50
        DB 6
        DB 2
        DB 0
        DB 4
        DB 252
        DB 3
        DB 32
        DB 32
        DB 17
        DB 17
        DB 9
        DB 5
        DB 255
        DB 5
        DB 9
        DB 25
        DB 49
        DB 16
        DB 0
        DB 16
        DB 16
        DB 16
        DB 254
        DB 16
        DB 16
        DB 254
        DB 0
        DB 0
        DB 252
        DB 0
        DB 0
        DB 0
        DB 254
        DB 0
        DB 0
        DB 8
        DB 8
        DB 4
        DB 71
        DB 36
        DB 24
        DB 7
        DB 0
        DB 0
        DB 31
        DB 0
        DB 0
        DB 0
        DB 127
        DB 0
        DB 0
        DB 4
        DB 4
        DB 4
        DB 228
        DB 36
        DB 36
        DB 37
        DB 254
        DB 36
        DB 36
        DB 36
        DB 36
        DB 228
        DB 4
        DB 4
        DB 0
        DB 0
        DB 0
        DB 0
        DB 63
        DB 0
        DB 0
        DB 0
        DB 255
        DB 0
        DB 0
        DB 16
        DB 32
        DB 31
        DB 0
        DB 0
        DB 0
        DB 128
        DB 144
        DB 140
        DB 132
        DB 132
        DB 244
        DB 165
        DB 134
        DB 132
        DB 132
        DB 132
        DB 132
        DB 148
        DB 140
        DB 132
        DB 0
        DB 128
        DB 128
        DB 128
        DB 64
        DB 71
        DB 40
        DB 40
        DB 16
        DB 40
        DB 36
        DB 67
        DB 192
        DB 64
        DB 0
        DB 0
        DB 0
        DB 2
        DB 254
        DB 146
        DB 146
        DB 146
        DB 254
        DB 18
        DB 17
        DB 18
        DB 28
        DB 240
        DB 24
        DB 23
        DB 18
        DB 16
        DB 0
        DB 8
        DB 31
        DB 8
        DB 8
        DB 4
        DB 255
        DB 5
        DB 129
        DB 65
        DB 49
        DB 15
        DB 17
        DB 33
        DB 193
        DB 65
        DB 0
        DB 16
        DB 136
        DB 228
        DB 59
        DB 18
        DB 4
        DB 244
        DB 148
        DB 244
        DB 159
        DB 148
        DB 244
        DB 148
        DB 244
        DB 4
        DB 0
        DB 1
        DB 0
        DB 255
        DB 0
        DB 66
        DB 58
        DB 2
        DB 58
        DB 66
        DB 74
        DB 82
        DB 66
        DB 98
        DB 10
        DB 50
        DB 0
        DB 16
        DB 18
        DB 146
        DB 114
        DB 254
        DB 81
        DB 145
        DB 0
        DB 34
        DB 204
        DB 0
        DB 0
        DB 255
        DB 0
        DB 0
        DB 0
        DB 4
        DB 2
        DB 1
        DB 0
        DB 255
        DB 0
        DB 4
        DB 4
        DB 4
        DB 2
        DB 2
        DB 2
        DB 255
        DB 1
        DB 1
        DB 0
        DB 8
        DB 8
        DB 136
        DB 255
        DB 72
        DB 40
        DB 0
        DB 200
        DB 72
        DB 72
        DB 127
        DB 72
        DB 200
        DB 72
        DB 8
        DB 0
        DB 1
        DB 65
        DB 128
        DB 127
        DB 0
        DB 64
        DB 64
        DB 32
        DB 19
        DB 12
        DB 12
        DB 18
        DB 33
        DB 96
        DB 32
        DB 0
        DB 96
        DB 96
        DB 108
        DB 108
        DB 236
        DB 252
        DB 127
        DB 111
        DB 108
        DB 108
        DB 108
        DB 108
        DB 108
        DB 96
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 11
        DB 27
        DB 27
        DB 51
        DB 59
        DB 111
        DB 103
        DB 3
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 34
        DB 102
        DB 204
        DB 0
        DB 24
        DB 152
        DB 152
        DB 153
        DB 251
        DB 250
        DB 152
        DB 152
        DB 152
        DB 24
        DB 0
        DB 0
        DB 112
        DB 60
        DB 14
        DB 0
        DB 96
        DB 97
        DB 97
        DB 97
        DB 127
        DB 127
        DB 97
        DB 97
        DB 97
        DB 96
        DB 0
        DB 96
        DB 96
        DB 108
        DB 108
        DB 236
        DB 252
        DB 127
        DB 111
        DB 108
        DB 108
        DB 108
        DB 108
        DB 108
        DB 96
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 11
        DB 27
        DB 27
        DB 51
        DB 59
        DB 111
        DB 103
        DB 3
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 112
        DB 240
        DB 128
        DB 0
        DB 255
        DB 255
        DB 0
        DB 255
        DB 255
        DB 0
        DB 128
        DB 240
        DB 112
        DB 0
        DB 0
        DB 96
        DB 96
        DB 99
        DB 99
        DB 96
        DB 127
        DB 127
        DB 96
        DB 127
        DB 127
        DB 96
        DB 99
        DB 99
        DB 96
        DB 96
        DB 0
        DB 0
        DB 192
        DB 198
        DB 198
        DB 198
        DB 198
        DB 254
        DB 254
        DB 198
        DB 198
        DB 198
        DB 198
        DB 198
        DB 192
        DB 0
        DB 0
        DB 0
        DB 64
        DB 96
        DB 48
        DB 24
        DB 15
        DB 7
        DB 0
        DB 63
        DB 127
        DB 96
        DB 96
        DB 96
        DB 120
        DB 120
        DB 0
        DB 96
        DB 120
        DB 238
        DB 230
        DB 48
        DB 0
        DB 176
        DB 176
        DB 255
        DB 255
        DB 216
        DB 222
        DB 220
        DB 216
        DB 0
        DB 0
        DB 54
        DB 55
        DB 55
        DB 22
        DB 22
        DB 16
        DB 97
        DB 97
        DB 55
        DB 31
        DB 28
        DB 54
        DB 102
        DB 112
        DB 112
        DB 0
        DB 96
        DB 98
        DB 230
        DB 236
        DB 0
        DB 243
        DB 243
        DB 183
        DB 191
        DB 251
        DB 255
        DB 183
        DB 243
        DB 241
        DB 0
        DB 0
        DB 64
        DB 96
        DB 63
        DB 31
        DB 48
        DB 111
        DB 111
        DB 98
        DB 98
        DB 111
        DB 111
        DB 98
        DB 111
        DB 111
        DB 96
        DB 0
        DB 48
        DB 50
        DB 246
        DB 244
        DB 0
        DB 198
        DB 198
        DB 254
        DB 254
        DB 198
        DB 6
        DB 254
        DB 254
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 63
        DB 31
        DB 8
        DB 0
        DB 0
        DB 127
        DB 127
        DB 0
        DB 0
        DB 31
        DB 63
        DB 48
        DB 56
        DB 0
        DB 96
        DB 230
        DB 236
        DB 0
        DB 248
        DB 248
        DB 216
        DB 216
        DB 216
        DB 255
        DB 255
        DB 24
        DB 219
        DB 222
        DB 0
        DB 0
        DB 0
        DB 63
        DB 31
        DB 108
        DB 127
        DB 63
        DB 24
        DB 31
        DB 111
        DB 49
        DB 31
        DB 30
        DB 51
        DB 97
        DB 120
        DB 0
        DB 64
        DB 112
        DB 252
        DB 255
        DB 3
        DB 12
        DB 172
        DB 172
        DB 172
        DB 175
        DB 175
        DB 172
        DB 172
        DB 172
        DB 12
        DB 0
        DB 0
        DB 0
        DB 127
        DB 127
        DB 0
        DB 0
        DB 126
        DB 126
        DB 54
        DB 54
        DB 54
        DB 54
        DB 126
        DB 126
        DB 0
        DB 0
        DB 0
        DB 24
        DB 24
        DB 216
        DB 216
        DB 24
        DB 26
        DB 30
        DB 28
        DB 24
        DB 216
        DB 216
        DB 24
        DB 24
        DB 0
        DB 0
        DB 96
        DB 96
        DB 96
        DB 96
        DB 103
        DB 103
        DB 96
        DB 96
        DB 120
        DB 126
        DB 103
        DB 97
        DB 96
        DB 96
        DB 96
        DB 0
        DB 0
        DB 0
        DB 0
        DB 127
        DB 127
        DB 99
        DB 99
        DB 227
        DB 227
        DB 99
        DB 99
        DB 127
        DB 127
        DB 0
        DB 0
        DB 0
        DB 64
        DB 96
        DB 48
        DB 31
        DB 15
        DB 24
        DB 48
        DB 63
        DB 127
        DB 102
        DB 102
        DB 102
        DB 102
        DB 96
        DB 0
        DB 0
        DB 32
        DB 48
        DB 248
        DB 236
        DB 103
        DB 111
        DB 252
        DB 248
        DB 16
        DB 248
        DB 248
        DB 0
        DB 254
        DB 254
        DB 0
        DB 0
        DB 0
        DB 0
        DB 63
        DB 127
        DB 96
        DB 102
        DB 103
        DB 115
        DB 48
        DB 15
        DB 15
        DB 96
        DB 127
        DB 63
        DB 0
        DB 0
        DB 0
        DB 102
        DB 126
        DB 126
        DB 231
        DB 255
        DB 126
        DB 102
        DB 0
        DB 254
        DB 254
        DB 102
        DB 230
        DB 231
        DB 99
        DB 0
        DB 0
        DB 51
        DB 27
        DB 99
        DB 127
        DB 63
        DB 11
        DB 91
        DB 112
        DB 63
        DB 15
        DB 0
        DB 127
        DB 127
        DB 0
        DB 0
        DB 102
        DB 118
        DB 126
        DB 238
        DB 230
        DB 118
        DB 102
        DB 192
        DB 112
        DB 255
        DB 31
        DB 248
        DB 248
        DB 24
        DB 24
        DB 0
        DB 96
        DB 102
        DB 102
        DB 63
        DB 63
        DB 54
        DB 54
        DB 64
        DB 96
        DB 55
        DB 28
        DB 31
        DB 51
        DB 96
        DB 96
        DB 0
        DB 96
        DB 98
        DB 238
        DB 236
        DB 0
        DB 48
        DB 54
        DB 246
        DB 246
        DB 54
        DB 246
        DB 246
        DB 54
        DB 48
        DB 48
        DB 0
        DB 96
        DB 48
        DB 31
        DB 31
        DB 48
        DB 104
        DB 108
        DB 103
        DB 99
        DB 96
        DB 103
        DB 111
        DB 108
        DB 110
        DB 102
        DB 0

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for BMP>`:
        DATA8
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 252
        DB 252
        DB 112
        DB 224
        DB 255
        DB 140
        DB 240
        DB 224
        DB 192
        DB 192
        DB 192
        DB 224
        DB 224
        DB 240
        DB 240
        DB 240
        DB 248
        DB 152
        DB 28
        DB 12
        DB 44
        DB 36
        DB 4
        DB 28
        DB 248
        DB 0
        DB 0
        DB 254
        DB 255
        DB 76
        DB 76
        DB 248
        DB 248
        DB 96
        DB 64
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 192
        DB 192
        DB 192
        DB 192
        DB 192
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 96
        DB 96
        DB 248
        DB 248
        DB 255
        DB 191
        DB 254
        DB 255
        DB 255
        DB 255
        DB 135
        DB 131
        DB 191
        DB 191
        DB 255
        DB 255
        DB 253
        DB 225
        DB 241
        DB 255
        DB 255
        DB 255
        DB 252
        DB 97
        DB 98
        DB 50
        DB 19
        DB 29
        DB 15
        DB 0
        DB 0
        DB 3
        DB 239
        DB 122
        DB 126
        DB 207
        DB 157
        DB 27
        DB 6
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 192
        DB 96
        DB 24
        DB 12
        DB 198
        DB 226
        DB 121
        DB 125
        DB 183
        DB 242
        DB 113
        DB 57
        DB 25
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 14
        DB 14
        DB 14
        DB 206
        DB 14
        DB 14
        DB 14
        DB 14
        DB 14
        DB 254
        DB 0
        DB 0
        DB 0
        DB 0
        DB 14
        DB 14
        DB 14
        DB 206
        DB 62
        DB 206
        DB 14
        DB 14
        DB 14
        DB 192
        DB 0
        DB 0
        DB 0
        DB 254
        DB 0
        DB 0
        DB 0
        DB 9
        DB 151
        DB 222
        DB 109
        DB 183
        DB 255
        DB 127
        DB 255
        DB 255
        DB 159
        DB 31
        DB 79
        DB 135
        DB 199
        DB 231
        DB 23
        DB 159
        DB 157
        DB 241
        DB 225
        DB 192
        DB 128
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 24
        DB 15
        DB 131
        DB 224
        DB 96
        DB 29
        DB 255
        DB 254
        DB 6
        DB 14
        DB 28
        DB 24
        DB 0
        DB 0
        DB 240
        DB 135
        DB 193
        DB 224
        DB 112
        DB 56
        DB 31
        DB 30
        DB 31
        DB 29
        DB 7
        DB 3
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 192
        DB 192
        DB 192
        DB 192
        DB 192
        DB 192
        DB 192
        DB 254
        DB 192
        DB 206
        DB 240
        DB 240
        DB 192
        DB 0
        DB 48
        DB 48
        DB 48
        DB 240
        DB 48
        DB 48
        DB 0
        DB 0
        DB 0
        DB 254
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 240
        DB 207
        DB 192
        DB 192
        DB 192
        DB 192
        DB 254
        DB 193
        DB 192
        DB 192
        DB 0
        DB 0
        DB 48
        DB 62
        DB 62
        DB 49
        DB 240
        DB 49
        DB 62
        DB 62
        DB 48
        DB 255
        DB 0
        DB 0
        DB 0
        DB 255
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 3
        DB 13
        DB 62
        DB 219
        DB 107
        DB 55
        DB 31
        DB 124
        DB 252
        DB 197
        DB 199
        DB 63
        DB 7
        DB 3
        DB 134
        DB 140
        DB 192
        DB 192
        DB 193
        DB 227
        DB 111
        DB 238
        DB 252
        DB 56
        DB 48
        DB 48
        DB 144
        DB 144
        DB 123
        DB 233
        DB 236
        DB 124
        DB 252
        DB 255
        DB 254
        DB 254
        DB 247
        DB 239
        DB 63
        DB 63
        DB 189
        DB 247
        DB 223
        DB 126
        DB 248
        DB 192
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 255
        DB 255
        DB 193
        DB 193
        DB 193
        DB 1
        DB 1
        DB 255
        DB 1
        DB 1
        DB 241
        DB 241
        DB 1
        DB 0
        DB 0
        DB 0
        DB 0
        DB 255
        DB 0
        DB 0
        DB 14
        DB 14
        DB 14
        DB 255
        DB 14
        DB 14
        DB 14
        DB 254
        DB 0
        DB 0
        DB 0
        DB 56
        DB 56
        DB 56
        DB 57
        DB 57
        DB 57
        DB 57
        DB 57
        DB 57
        DB 57
        DB 1
        DB 255
        DB 255
        DB 0
        DB 0
        DB 56
        DB 56
        DB 56
        DB 56
        DB 255
        DB 56
        DB 56
        DB 56
        DB 0
        DB 255
        DB 0
        DB 0
        DB 0
        DB 255
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 8
        DB 252
        DB 252
        DB 30
        DB 62
        DB 254
        DB 254
        DB 231
        DB 231
        DB 227
        DB 199
        DB 207
        DB 217
        DB 241
        DB 240
        DB 249
        DB 12
        DB 96
        DB 255
        DB 255
        DB 219
        DB 155
        DB 8
        DB 1
        DB 255
        DB 255
        DB 204
        DB 236
        DB 238
        DB 238
        DB 195
        DB 255
        DB 45
        DB 108
        DB 118
        DB 55
        DB 51
        DB 19
        DB 255
        DB 124
        DB 150
        DB 214
        DB 235
        DB 107
        DB 233
        DB 255
        DB 255
        DB 248
        DB 240
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 255
        DB 255
        DB 193
        DB 1
        DB 255
        DB 0
        DB 0
        DB 7
        DB 248
        DB 6
        DB 1
        DB 1
        DB 192
        DB 0
        DB 192
        DB 192
        DB 192
        DB 63
        DB 56
        DB 56
        DB 0
        DB 0
        DB 248
        DB 7
        DB 0
        DB 0
        DB 0
        DB 255
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 56
        DB 56
        DB 56
        DB 7
        DB 7
        DB 0
        DB 0
        DB 56
        DB 56
        DB 56
        DB 56
        DB 7
        DB 6
        DB 6
        DB 6
        DB 6
        DB 1
        DB 56
        DB 56
        DB 56
        DB 63
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 127
        DB 255
        DB 0
        DB 0
        DB 127
        DB 255
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 129
        DB 193
        DB 125
        DB 31
        DB 3
        DB 135
        DB 102
        DB 124
        DB 28
        DB 30
        DB 31
        DB 63
        DB 59
        DB 51
        DB 55
        DB 55
        DB 126
        DB 124
        DB 55
        DB 52
        DB 55
        DB 63
        DB 27
        DB 27
        DB 120
        DB 127
        DB 135
        DB 132
        DB 254
        DB 254
        DB 3
        DB 7
        DB 7
        DB 24
        DB 56
        DB 96
        DB 192
        DB 15
        DB 60
        DB 224
        DB 128
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 56
        DB 7
        DB 7
        DB 1
        DB 6
        DB 1
        DB 56
        DB 56
        DB 6
        DB 1
        DB 6
        DB 56
        DB 56
        DB 63
        DB 0
        DB 1
        DB 1
        DB 1
        DB 0
        DB 56
        DB 56
        DB 6
        DB 6
        DB 1
        DB 56
        DB 56
        DB 56
        DB 56
        DB 7
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 63
        DB 63
        DB 63
        DB 63
        DB 63
        DB 176
        DB 128
        DB 112
        DB 184
        DB 127
        DB 127
        DB 27
        DB 12
        DB 6
        DB 3
        DB 1
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 128
        DB 128
        DB 128
        DB 64
        DB 64
        DB 96
        DB 160
        DB 176
        DB 152
        DB 72
        DB 72
        DB 100
        DB 52
        DB 31
        DB 27
        DB 15
        DB 7
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 7
        DB 6
        DB 25
        DB 63
        DB 124
        DB 248
        DB 192
        DB 128
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 192
        DB 240
        DB 248
        DB 204
        DB 230
        DB 31
        DB 13
        DB 3
        DB 1
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 64
        DB 120
        DB 63
        DB 63
        DB 63
        DB 63
        DB 6
        DB 2
        DB 3
        DB 3
        DB 1
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 252
        DB 255
        DB 255
        DB 255
        DB 255
        DB 14
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_WrDat?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    LCD_WrDat

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_WrCmd?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    LCD_WrCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_Set_Pos?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    LCD_Set_Pos

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_Fill?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    LCD_Fill

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_CLS?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    LCD_CLS

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_Init?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    LCD_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_P6x8Str?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    LCD_P6x8Str

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_P8x16Str?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    LCD_P8x16Str

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??LCD_P16x16Ch?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    LCD_P16x16Ch

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Draw_BMP?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    Draw_BMP

        END
// 
//   889 bytes in segment BANKED_CODE
//    60 bytes in segment BANK_RELAYS
//     6 bytes in segment SFR_AN
// 2 048 bytes in segment XDATA_I
// 2 048 bytes in segment XDATA_ID
// 2 072 bytes in segment XDATA_ROM_C
// 
// 2 997 bytes of CODE  memory
// 2 072 bytes of CONST memory
//     0 bytes of DATA  memory (+ 6 bytes shared)
// 2 048 bytes of XDATA memory
//
//Errors: none
//Warnings: 1
